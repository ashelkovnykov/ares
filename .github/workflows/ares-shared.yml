on:
  workflow_call:

env:
  CARGO_TERM_COLOR: always
  ACTIONS_ALLOW_UNSECURE_COMMANDS: "true"

defaults:
  run:
    working-directory: rust/ares

jobs:
  build:
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v3

      # Install Rust
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      
      # Cache Rust build artifacts
      - name: Cache Rust build artifacts
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      # Check formatting
      - name: Format
        run: |
          cargo fmt --check

      # See clippy linter docs: https://github.com/rust-lang/rust-clippy
      #
      # First linter is set to fail for all warnings, then ignored warnings are
      # explicitly listed
      #
      # XX TODO make a script with all the flags for the linter
      - name: Lint
        run: |
          cargo clippy --all-targets --no-deps -- -D warnings -A clippy::missing_safety_doc

      # Build Ares
      - name: Build
        run: |
          cargo build --release --verbose

      # Run tests
      - name: Test
        run: |
          cargo test --verbose -- --test-threads=1
